#!/usr/bin/env bash
set -e -o pipefail
trap 'echo 1>&2 FAILED; exit 1' 0

docker='sudo docker'

die() {
    echo 1>&2 "$(basename "$0"):" "$@";
    [[ "$($docker ps | grep capps-bind)" ]] && \
    $docker stop capps-bind 1>/dev/null
    exit 1;
}

base=$(cd "$(dirname "$0")" && pwd -P)
cd $base
sudo -v || die 'Cannot sudo to run docker'

#   We always build a test image; it's tagged :latest by hand.
image=capps-bind:test

[[ $1 = -n ]] || $docker build -t $image -q .

docker_args='--rm --name capps-bind --detach=true'
version=$(./capps-named -T -C $(pwd)/tconfig $docker_args)

record=$($docker exec -it capps-bind dig SOA friendofdog.com @127.0.0.1)
[[ $record == *"dns1.friendofdog.com."* ]] || \
die "FAIL: named did not return expected DNS records, instead received$record"

#[[ $version = 'BIND 9'* ]] || die "FAIL: unexpected version: $version"

trap '' 0
echo OK

$docker stop capps-bind 1>/dev/null
